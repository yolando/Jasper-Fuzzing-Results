
Program received signal SIGSEGV, Segmentation fault.
0x0807a1c2 in jpc_dec_cp_setfromqcx (cp=0x80b15b0, ccp=0x80c7fe8, 
    compparms=0x80af4ec, flags=0) at jpc_dec.c:1704
	in jpc_dec.c
#0  0x0807a1c2 in jpc_dec_cp_setfromqcx (cp=0x80b15b0, ccp=0x80c7fe8, 
    compparms=0x80af4ec, flags=0) at jpc_dec.c:1704
        bandno = 2050
#1  0x0807a0f3 in jpc_dec_cp_setfromqcd (cp=0x80b15b0, qcd=0x80af4ec)
    at jpc_dec.c:1682
        compno = 207
        ccp = 0x80c7fe8
#2  0x08079511 in jpc_dec_process_qcd (dec=0x80af470, ms=0x80af4e0)
    at jpc_dec.c:1338
        qcd = 0x80af4ec
        tile = 0x80a09c0
#3  0x08076570 in jpc_dec_decode (dec=0x80af470) at jpc_dec.c:390
        ms = 0x80af4e0
        mstabent = 0x80a0b40
        ret = 0
        cstate = 0x80af460
        __PRETTY_FUNCTION__ = "jpc_dec_decode"
#4  0x08076280 in jpc_decode (in=0x80ab308, optstr=0x0) at jpc_dec.c:254
        opts = {debug = 0, maxlyrs = 16384, maxpkts = -1}
        dec = 0x80af470
        image = 0x0
#5  0x0804ad04 in jas_image_decode (in=0x80ab308, fmt=5, optstr=0x0)
    at jas_image.c:372
        fmtinfo = 0x80a25c4
        image = 0x0
#6  0x08049a8c in main (argc=7, argv=0xbffffcd4) at jasper.c:229
        image = 0xb7f8bff4
        cmdopts = 0x80a92d0
        in = 0x80ab308
        out = 0x80ad390
        dectmr = {start = {tv_sec = 1317832297, tv_usec = 401148}, stop = {
            tv_sec = -1208434700, tv_usec = 7}}
        enctmr = {start = {tv_sec = -1207961352, tv_usec = -1208434700}, 
          stop = {tv_sec = -1208695383, tv_usec = -1209564251}}
        dectime = 6.152783780600825e-270
        enctime = -4.5458254427160528e-39
        numcmpts = 134517192
        i = -1209563739
Dump of assembler code from 0x807a1a2 to 0x807a1e2:
0x0807a1a2 <jpc_dec_cp_setfromqcx+62>:	mov    0x10(%ebp),%eax
0x0807a1a5 <jpc_dec_cp_setfromqcx+65>:	mov    0x8(%eax),%eax
0x0807a1a8 <jpc_dec_cp_setfromqcx+68>:	mov    -0x4(%ebp),%edx
0x0807a1ab <jpc_dec_cp_setfromqcx+71>:	shl    $0x2,%edx
0x0807a1ae <jpc_dec_cp_setfromqcx+74>:	add    %edx,%eax
0x0807a1b0 <jpc_dec_cp_setfromqcx+76>:	mov    (%eax),%edx
0x0807a1b2 <jpc_dec_cp_setfromqcx+78>:	mov    0xc(%ebp),%eax
0x0807a1b5 <jpc_dec_cp_setfromqcx+81>:	mov    -0x4(%ebp),%ecx
0x0807a1b8 <jpc_dec_cp_setfromqcx+84>:	add    $0x4,%ecx
0x0807a1bb <jpc_dec_cp_setfromqcx+87>:	jae    0x807a1c2 <jpc_dec_cp_setfromqcx+94>
0x0807a1bd <jpc_dec_cp_setfromqcx+89>:	call   0x80492ec <constraint_handler_wrapper_uadd@plt>
0x0807a1c2 <jpc_dec_cp_setfromqcx+94>:	mov    %edx,(%eax,%ecx,4)
0x0807a1c5 <jpc_dec_cp_setfromqcx+97>:	addl   $0x1,-0x4(%ebp)
0x0807a1c9 <jpc_dec_cp_setfromqcx+101>:	jno    0x807a1d0 <jpc_dec_cp_setfromqcx+108>
0x0807a1cb <jpc_dec_cp_setfromqcx+103>:	call   0x804931c <constraint_handler_wrapper_sadd@plt>
0x0807a1d0 <jpc_dec_cp_setfromqcx+108>:	mov    0x10(%ebp),%eax
0x0807a1d3 <jpc_dec_cp_setfromqcx+111>:	mov    0x4(%eax),%eax
0x0807a1d6 <jpc_dec_cp_setfromqcx+114>:	cmp    -0x4(%ebp),%eax
0x0807a1d9 <jpc_dec_cp_setfromqcx+117>:	jg     0x807a1a2 <jpc_dec_cp_setfromqcx+62>
0x0807a1db <jpc_dec_cp_setfromqcx+119>:	mov    0x10(%ebp),%eax
0x0807a1de <jpc_dec_cp_setfromqcx+122>:	mov    0x4(%eax),%eax
0x0807a1e1 <jpc_dec_cp_setfromqcx+125>:	mov    %eax,%edx
End of assembler dump.
eax            0x80c7fe8	135036904
ecx            0x806	2054
edx            0x3000	12288
ebx            0xb7f8bff4	-1208434700
esp            0xbffffa98	0xbffffa98
ebp            0xbffffaa8	0xbffffaa8
esi            0x0	0
edi            0x0	0
eip            0x807a1c2	0x807a1c2 <jpc_dec_cp_setfromqcx+94>
eflags         0x10206	[ PF IF RF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x33	51
st0            0	(raw 0x00000000000000000000)
st1            0	(raw 0x00000000000000000000)
st2            0	(raw 0x00000000000000000000)
st3            0	(raw 0x00000000000000000000)
st4            0	(raw 0x00000000000000000000)
st5            0	(raw 0x00000000000000000000)
st6            8192	(raw 0x400c8000000000000000)
st7            7936	(raw 0x400bf800000000000000)
fctrl          0x37f	895
fstat          0x20	32
ftag           0xffff	65535
fiseg          0x0	0
fioff          0x80758fb	134699259
foseg          0x0	0
fooff          0xbffffb04	-1073743100
fop            0x0	0
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 
    0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0xff00, 0x0, 0x0, 0xff00, 0xffff, 
    0x0, 0x0}, v4_int32 = {0xff000000, 0x0, 0xffffff00, 0x0}, v2_int64 = {
    0xff000000, 0xffffff00}, uint128 = 0x00000000ffffff0000000000ff000000}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
mxcsr          0x1f80	[ IM DM ZM OM UM PM ]
mm0            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm1            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm2            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm3            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm4            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm5            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm6            {uint64 = 0x8000000000000000, v2_int32 = {0x0, 0x80000000}, 
  v4_int16 = {0x0, 0x0, 0x0, 0x8000}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x80}}
mm7            {uint64 = 0xf800000000000000, v2_int32 = {0x0, 0xf8000000}, 
  v4_int16 = {0x0, 0x0, 0x0, 0xf800}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0xf8}}
A debugging session is active.

	Inferior 1 [process 14190] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
