
Program received signal SIGFPE, Arithmetic exception.
0x080791de in jpc_dec_process_siz (dec=0x80af480, ms=0x80af4f0)
    at jpc_dec.c:1239
	in jpc_dec.c
#0  0x080791de in jpc_dec_process_siz (dec=0x80af480, ms=0x80af4f0)
    at jpc_dec.c:1239
        siz = 0x80af4fc
        compno = 0
        tileno = 122
        tile = 0x80b15d0
        tcomp = 0x80b40f8
        htileno = 122
        vtileno = 0
        cmpt = 0x80b15f0
#1  0x08076570 in jpc_dec_decode (dec=0x80af480) at jpc_dec.c:390
        ms = 0x80af4f0
        mstabent = 0x80a0b10
        ret = 0
        cstate = 0x80af470
        __PRETTY_FUNCTION__ = "jpc_dec_decode"
#2  0x08076280 in jpc_decode (in=0x80ab308, optstr=0x0) at jpc_dec.c:254
        opts = {debug = 0, maxlyrs = 16384, maxpkts = -1}
        dec = 0x80af480
        image = 0x0
#3  0x0804ad04 in jas_image_decode (in=0x80ab308, fmt=5, optstr=0x0)
    at jas_image.c:372
        fmtinfo = 0x80a25c4
        image = 0x0
#4  0x08049a8c in main (argc=7, argv=0xbffffcd4) at jasper.c:229
        image = 0xb7f8bff4
        cmdopts = 0x80a92d0
        in = 0x80ab308
        out = 0x80ad390
        dectmr = {start = {tv_sec = 1317833066, tv_usec = 894349}, stop = {
            tv_sec = -1208434700, tv_usec = 7}}
        enctmr = {start = {tv_sec = -1207961352, tv_usec = -1208434700}, 
          stop = {tv_sec = -1208695383, tv_usec = -1209564251}}
        dectime = 6.152783780600825e-270
        enctime = -4.5458254427160528e-39
        numcmpts = 134517192
        i = -1209563739
Dump of assembler code from 0x80791be to 0x80791fe:
0x080791be <jpc_dec_process_siz+1383>:	call   0x80492ec <constraint_handler_wrapper_uadd@plt>
0x080791c3 <jpc_dec_process_siz+1388>:	mov    %eax,%ecx
0x080791c5 <jpc_dec_process_siz+1390>:	sub    $0x1,%ecx
0x080791c8 <jpc_dec_process_siz+1393>:	jae    0x80791cf <jpc_dec_process_siz+1400>
0x080791ca <jpc_dec_process_siz+1395>:	call   0x804945c <constraint_handler_wrapper_usub@plt>
0x080791cf <jpc_dec_process_siz+1400>:	mov    -0x18(%ebp),%eax
0x080791d2 <jpc_dec_process_siz+1403>:	mov    (%eax),%eax
0x080791d4 <jpc_dec_process_siz+1405>:	mov    %eax,-0x2c(%ebp)
0x080791d7 <jpc_dec_process_siz+1408>:	mov    %ecx,%eax
0x080791d9 <jpc_dec_process_siz+1410>:	mov    $0x0,%edx
0x080791de <jpc_dec_process_siz+1415>:	divl   -0x2c(%ebp)
0x080791e1 <jpc_dec_process_siz+1418>:	mov    %eax,%edx
0x080791e3 <jpc_dec_process_siz+1420>:	mov    -0x1c(%ebp),%eax
0x080791e6 <jpc_dec_process_siz+1423>:	mov    %edx,(%eax)
0x080791e8 <jpc_dec_process_siz+1425>:	mov    -0x14(%ebp),%eax
0x080791eb <jpc_dec_process_siz+1428>:	mov    0x8(%eax),%edx
0x080791ee <jpc_dec_process_siz+1431>:	mov    -0x18(%ebp),%eax
0x080791f1 <jpc_dec_process_siz+1434>:	mov    0x4(%eax),%eax
0x080791f4 <jpc_dec_process_siz+1437>:	add    %edx,%eax
0x080791f6 <jpc_dec_process_siz+1439>:	jae    0x80791fd <jpc_dec_process_siz+1446>
0x080791f8 <jpc_dec_process_siz+1441>:	call   0x80492ec <constraint_handler_wrapper_uadd@plt>
0x080791fd <jpc_dec_process_siz+1446>:	mov    %eax,%ecx
End of assembler dump.
eax            0x6100f3f	101715775
ecx            0x6100f3f	101715775
edx            0x0	0
ebx            0x1	1
esp            0xbffffac0	0xbffffac0
ebp            0xbffffb08	0xbffffb08
esi            0x0	0
edi            0x0	0
eip            0x80791de	0x80791de <jpc_dec_process_siz+1415>
eflags         0x10216	[ PF AF IF RF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x33	51
st0            0	(raw 0x00000000000000000000)
st1            0	(raw 0x00000000000000000000)
st2            0	(raw 0x00000000000000000000)
st3            0	(raw 0x00000000000000000000)
st4            0	(raw 0x00000000000000000000)
st5            0	(raw 0x00000000000000000000)
st6            8192	(raw 0x400c8000000000000000)
st7            7936	(raw 0x400bf800000000000000)
fctrl          0x37f	895
fstat          0x20	32
ftag           0xffff	65535
fiseg          0x0	0
fioff          0x80758fb	134699259
foseg          0x0	0
fooff          0xbffffb04	-1073743100
fop            0x0	0
xmm0           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 
    0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0xff00, 0x0, 0x0, 0xff00, 0xffff, 
    0x0, 0x0}, v4_int32 = {0xff000000, 0x0, 0xffffff00, 0x0}, v2_int64 = {
    0xff000000, 0xffffff00}, uint128 = 0x00000000ffffff0000000000ff000000}
xmm1           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm2           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, 
  v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, 
  uint128 = 0x00000000000000000000000000000000}
mxcsr          0x1f80	[ IM DM ZM OM UM PM ]
mm0            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm1            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm2            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm3            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm4            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm5            {uint64 = 0x0, v2_int32 = {0x0, 0x0}, v4_int16 = {0x0, 0x0, 
    0x0, 0x0}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
mm6            {uint64 = 0x8000000000000000, v2_int32 = {0x0, 0x80000000}, 
  v4_int16 = {0x0, 0x0, 0x0, 0x8000}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x80}}
mm7            {uint64 = 0xf800000000000000, v2_int32 = {0x0, 0xf8000000}, 
  v4_int16 = {0x0, 0x0, 0x0, 0xf800}, v8_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0xf8}}
A debugging session is active.

	Inferior 1 [process 23399] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
